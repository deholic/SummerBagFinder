//
//  RegionSelectPresenter.swift
//  SummerBagFinder
//
//  Created by EUIGYOM KIM on 2020/06/21.
//  Copyright (c) 2020 EUIGYOM KIM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

// MARK: RegionSelectPresenter

final class RegionSelectPresenter {
    
    weak var viewController: RegionSelectDisplayLogic?
    
    deinit {
        print(#function, #file)
    }
}

extension RegionSelectPresenter: RegionSelectPresentationLogic {
    func present(_ response: RegionSelect.Response) {
        switch response {
        case let .regions(regions):
            displayRegions(regions)
        case let .alert(message):
            displayAlert(message)
        }
    }
}

extension RegionSelectPresenter {
    private func displayRegions(_ regions: [Region]) {
        let viewRegions = regions.map {
            RegionSelect.ViewModel.Region(
                name: $0.name,
                subregions: $0.subregions.map { RegionSelect.ViewModel.SubRegion(name: $0.name)}
            )
        }
        let viewModel = RegionSelect.ViewModel.Regions(regions: viewRegions)
        viewController?.display(viewModel)
    }
    
    private func displayAlert(_ message: String) {
        let viewModel = CommonViewModel.Alert(
            id: 100,
            title: "test",
            message: message,
            confirmTitle: "확인"
        )
        viewController?.display(viewModel)
    }
}

// MARK: RegionSelectDisplayLogic

protocol RegionSelectDisplayLogic: class {
    func display(_ viewModel: RegionSelect.ViewModel.Regions)
    func display(_ viewModel: CommonViewModel.Alert)
}
