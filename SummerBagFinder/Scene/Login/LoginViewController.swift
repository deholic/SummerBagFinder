//
//  LoginViewController.swift
//  SummerBagFinder
//
//  Created by EUIGYOM KIM on 2020/06/21.
//  Copyright (c) 2020 EUIGYOM KIM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift
import RxCocoa

class LoginViewController: UIViewController {
    var interactor: LoginRequestLogic?
    let disposeBag = DisposeBag()
    
    lazy var stackView: UIStackView = {
        let view = UIStackView()
        view.axis = .vertical
        view.spacing = 16
        return view
    }()
    
    lazy var idFormView: LoginFormView = {
        let view = LoginFormView()
        view.name = "아이디"
        return view
    }()
    
    lazy var passwordFormView: LoginFormView = {
        let view = LoginFormView()
        view.name = "패스워드"
        view.isSecured = true
        return view
    }()
    
    lazy var submitButton: UIButton = {
        let button = UIButton(type: .custom)
        button.setTitle("로그인", for: .normal)
        
        button.titleLabel?.font = .systemFont(ofSize: 16.0, weight: .bold)
        button.backgroundColor = .systemBlue
        button.layer.cornerRadius = 8.0
        
        button.snp.makeConstraints { (maker) in
            maker.height.equalTo(50)
        }
        
        button.rx.tap.subscribe(onNext: {
            self.tapSubmitButton()
        }).disposed(by: disposeBag)
        
        return button
    }()
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupViews()
    }
}

// MARK: - Setup

extension LoginViewController {
    
    private func setupViews() {
        self.title = "로그인 - UIKit"
        self.edgesForExtendedLayout = [.all]
        
        view.backgroundColor = .systemBackground
        view.addSubview(stackView)
        
        stackView.snp.makeConstraints { (maker) in
            maker.top.equalTo(view.safeAreaLayoutGuide).offset(20)
            maker.leading.equalToSuperview().offset(20)
            maker.trailing.equalToSuperview().inset(20)
        }
        
        stackView.addArrangedSubview(idFormView)
        stackView.addArrangedSubview(passwordFormView)
        stackView.addArrangedSubview(submitButton)
    }
}

// MARK: - Actions

extension LoginViewController {
    private func tapSubmitButton() {
        guard let id = idFormView.currentValue, let password = passwordFormView.currentValue else { return }
        interactor?.process(Login.Request.Login(id: id, password: password))
    }
}

// MARK: - LoginDisplayLogic

extension LoginViewController: LoginDisplayLogic {
    func display(_ viewModel: CommonViewModel.Alert) {
        let alert = UIAlertController(title: viewModel.title,
                                      message: viewModel.message,
                                      preferredStyle: .alert)
        
        alert.addAction(UIAlertAction(title: viewModel.confirmTitle, style: .cancel, handler: nil))
        present(alert, animated: true, completion: nil)
    }
}
