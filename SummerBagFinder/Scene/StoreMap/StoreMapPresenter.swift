//
//  StoreMapPresenter.swift
//  
//
//  Created by mine on 2020/06/28.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// MARK: StoreMapPresenter

enum StoreMapNextScene {
    case none
    case storeDetail
    case regionSelect
}

class StoreMapPresenter: ObservableObject {
    
    @Published var somthing = StoreMap.DidTapButton.ViewModel()
    @Published var MessageFromDetail: String = ""
    
    // MARK: routing
    @Published var nextScene: StoreMapNextScene?
    @Published var isPresented = false
    
    var storeDetailBuilder: LazyStoreDetailBuildingLogic
    var regionSelectBuilder: LazyRegionSelectBuildingLogic

    init(storeDetailBuilder: LazyStoreDetailBuildingLogic, regionSelectBuilder: LazyRegionSelectBuildingLogic) {
        self.storeDetailBuilder = storeDetailBuilder
        self.regionSelectBuilder = regionSelectBuilder
    }
}

// MARK: StoreMapPresentationLogic

extension StoreMapPresenter: StoreMapPresentationLogic {
    // MARK: Do something
    
    func presentSomething(response: StoreMap.DidTapButton.Response) {
        somthing = StoreMap.DidTapButton.ViewModel()
    }
    
    func showRejectMessage(_ message: String) {
        MessageFromDetail = message
    }
}

// MARK: StoreMapRoutingLogic

extension StoreMapPresenter: StoreMapRoutingLogic {

    func routeToStoreDetail(store: Store, listener: StoreDetailListener?) {
        //라우팅: 스유 -> 스유
        storeDetailBuilder.prepareForBuilding(store: store, listener: listener)
        nextScene = .storeDetail
    }
    
    func routeToRegionSelection(message: String?) {
        //라우팅: 스유 -> 유킷
        regionSelectBuilder.prepareForBuilding(message: message)
        nextScene = .regionSelect
        isPresented = true
    }
}
