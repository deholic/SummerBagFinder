//
//  StoreMapPresenter.swift
//  
//
//  Created by mine on 2020/06/28.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// MARK: StoreMapPresenter

class StoreMapPresenter: ObservableObject {
    
    @Published var somthing = StoreMap.DidTapButton.ViewModel()
    @Published var MessageFromDetail: String = ""
    
    // MARK: routing
    
    @Published var isStoreDetailPresented: Bool = false
    @Published var storeDetailBuilderBuildingLogic: (() -> (StoreDetailBusinessLogic, StoreDetailPresenter))? = nil
    @Published var isRegionSelectPresended: Bool = false
    @Published var regionSelectBuilderBuildingLogic: (() -> RegionSelectViewController)? = nil
    
    private var storeDetailBuilder: StoreDetailBuildingLogic?
    private var regionSelectBuilder: RegionSelectBuildingLogic?

    init(storeDetailBuilder: StoreDetailBuildingLogic? = nil, regionSelectBuilder: RegionSelectBuildingLogic? = nil) {
        self.storeDetailBuilder = storeDetailBuilder
        self.regionSelectBuilder = regionSelectBuilder
    }
}

// MARK: StoreMapPresentationLogic

extension StoreMapPresenter: StoreMapPresentationLogic {
    // MARK: Do something
    
    func presentSomething(response: StoreMap.DidTapButton.Response) {
        somthing = StoreMap.DidTapButton.ViewModel()
    }
    
    func showRejectMessage(_ message: String) {
        MessageFromDetail = message
    }
}

// MARK: StoreMapRoutingLogic

extension StoreMapPresenter: StoreMapRoutingLogic {

    func routeToStoreDetail(store: Store, listener: StoreDetailListener?) {
        guard let storeDetailBuilder = storeDetailBuilder else { return }
        // 스유 -> 스유
        let sceneBuildingLogic: () -> (StoreDetailBusinessLogic, StoreDetailPresenter) = {
            return storeDetailBuilder.build(store: store, listener: listener)
        }
        self.isStoreDetailPresented = true
        self.storeDetailBuilderBuildingLogic = sceneBuildingLogic
    }
    
    func routeToRegionSelection(message: String?) {
        guard let regionSelectBuilder = regionSelectBuilder else { return }
        //라우팅: 스유 -> 유킷
        let sceneBuildingLogic: () -> RegionSelectViewController = {
            let viewController = regionSelectBuilder.build(message: message)
            return viewController
        }
        self.isRegionSelectPresended = true
        self.regionSelectBuilderBuildingLogic = sceneBuildingLogic
    }
}
