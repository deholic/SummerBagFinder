//
//  StoreMapPresenter.swift
//  
//
//  Created by mine on 2020/06/28.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StoreMapPresentationLogic {
    func presentSomething(response: StoreMap.DidTapButton.Response)
}

class StoreMapPresenter: ObservableObject {
    
    @Published var somthing = StoreMap.DidTapButton.ViewModel()
    
    // routing
    @Published var isStoreDetailPresented: Bool = false
    @Published var storeDetailSceneBuildingLogic: (() -> (StoreDetailBusinessLogic, StoreDetailPresenter))? = nil
    @Published var isRegionSelectPresended: Bool = false
    @Published var regionSelectSceneBuildingLogic: (() -> RegionSelectViewController)? = nil
    
    var storeDetailScene: StoreDetailSceneLogic?
    var regionSelectScene: RegionSelectSceneLogic?

    init(storeDetailScene: StoreDetailSceneLogic? = nil, regionSelectScene: RegionSelectSceneLogic? = nil) {
        self.storeDetailScene = storeDetailScene
        self.regionSelectScene = regionSelectScene
    }
}

extension StoreMapPresenter: StoreMapPresentationLogic {
    // MARK: Do something
    
    func presentSomething(response: StoreMap.DidTapButton.Response) {
        somthing = StoreMap.DidTapButton.ViewModel()
    }
}

extension StoreMapPresenter: StoreMapRoutingLogic {
    
    func routeToStoreDetail(store: Store) {
        guard let storeDetailScene = storeDetailScene else { return }
        // 스유 -> 스유
        let sceneBuildingLogic: () -> (StoreDetailBusinessLogic, StoreDetailPresenter) = {
            return storeDetailScene.build(store: store)
        }
        self.isStoreDetailPresented = true
        self.storeDetailSceneBuildingLogic = sceneBuildingLogic
    }
    
    func routeToRegionSelection(message: String?) {
        guard let regionSelectScene = regionSelectScene else { return }
        // 스유 -> 유킷
        let sceneBuildingLogic: () -> RegionSelectViewController = {
            let viewController = regionSelectScene.build(message: message)
            return viewController
        }
        self.isRegionSelectPresended = true
        self.regionSelectSceneBuildingLogic = sceneBuildingLogic
    }
    
}


protocol ViewPresentation {
    var isPresented: Bool { get }
    
}
